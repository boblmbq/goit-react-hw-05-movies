{"version":3,"file":"static/js/502.da47c0d4.chunk.js","mappings":"mTAEMA,EAAM,mCAENC,EAAWC,EAAAA,EAAMC,OAAO,CAC5BC,QAAQ,kCAGGC,EAAgB,mCAAG,sGAGpBJ,EAASK,IAAT,iCACkBN,EADlB,2FAHoB,uBAEpBO,EAFoB,EAE5BC,KAAQD,QAFoB,kBAOvBA,GAPuB,2CAAH,qDAUhBE,EAAe,mCAAG,WAAMC,GAAN,yFAGnBT,EAASK,IAAT,+BAAqCN,EAArC,kBAAkDU,IAH/B,uBAEnBH,EAFmB,EAE3BC,KAAQD,QAFmB,kBAItBA,GAJsB,2CAAH,sDAOfI,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASK,IAAT,gBAAsBM,EAAtB,oBAAoCZ,IADjC,uBAClBQ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAY,mCAAG,WAAMD,GAAN,yFACHX,EAASK,IAAT,gBAAsBM,EAAtB,4BAA4CZ,IADzC,uBAClBQ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZM,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAASK,IAAT,gBAAsBM,EAAtB,4BAA4CZ,IADtC,uBACrBQ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,mKCjCfO,E,QAAWC,EAAOC,GAAV,yG,SCIRC,EAAY,WACvB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQT,GAAOU,EAAAA,EAAAA,MAAPV,GAeR,OAbAW,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAEuBV,EAAAA,EAAAA,IAAaD,GAFpC,OAEUJ,EAFV,OAGYgB,EAAShB,EAATgB,KACRH,EAAYG,GAJhB,gDAMIC,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACf,KAGF,SAACG,EAAD,UACGK,EAASQ,KAAI,gBAAGC,EAAH,EAAGA,UAAWnB,EAAd,EAAcA,KAAMoB,EAApB,EAAoBA,aAApB,OACZ,2BACE,gBACEC,IACED,EAAY,0CAC2BA,GACnCE,EAAAA,EAENC,IAAKvB,EACLwB,MAAO,OAET,wBAAKL,MAVEnB,EADG,KAgBnB,C,qBCrCD,IAHE,+L","sources":["api/api.js","components/MovieCast/MovieCast.styled.jsx","components/MovieCast/MovieCast.jsx","constants/default_img.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '05daa517baabbb59954a8442a1286030';\n\nconst BASE_URL = axios.create({\n  baseURL: `https://api.themoviedb.org/3/`,\n});\n\nexport const getPopularMovies = async () => {\n  const {\n    data: { results },\n  } = await BASE_URL.get(\n    `discover/movie?api_key=${KEY}&include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc`\n  );\n\n  return results;\n};\n\nexport const getMoviesByName = async name => {\n  const {\n    data: { results },\n  } = await BASE_URL.get(`search/movie?api_key=${KEY}&query=${name}`);\n  return results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await BASE_URL.get(`movie/${id}?api_key=${KEY}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await BASE_URL.get(`movie/${id}/credits?api_key=${KEY}`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await BASE_URL.get(`movie/${id}/reviews?api_key=${KEY}`);\n  return data;\n};\n\n","import styled from \"@emotion/styled\";\n\nexport const UlStyled = styled.ul`\ndisplay: flex; \nflex-wrap: wrap;\ngap:  40px;\njustify-content: space-between;\n`;","import { getMovieCast } from 'api/api';\nimport defaultImg from 'constants/default_img';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { UlStyled } from './MovieCast.styled';\n\nexport const MovieCast = () => {\n  const [castList, setCastList] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function movieCast() {\n      try {\n        const data = await getMovieCast(id);\n        const { cast } = data;\n        setCastList(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    movieCast();\n  }, [id]);\n\n  return (\n    <UlStyled>\n      {castList.map(({ character, name, profile_path }) => (\n        <li key={name}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                : defaultImg\n            }\n            alt={name}\n            width={250}\n          />\n          <h2>{character}</h2>\n        </li>\n      ))}\n    </UlStyled>\n  );\n};\n\n"," const defaultImg =\n  'https://imgs.search.brave.com/IoYXsAeMX1UnHVPpwqcjWOwaSOwAPx9uT-Srs96mG8g/rs:fit:500:0:0/g:ce/aHR0cHM6Ly9pMS5z/bmRjZG4uY29tL2Fy/dHdvcmtzLW51enI0/Q2R5WVY0VGY4TGQt/R2U0WFV3LXQ1MDB4/NTAwLmpwZw';\n\n\nexport default defaultImg;"],"names":["KEY","BASE_URL","axios","create","baseURL","getPopularMovies","get","results","data","getMoviesByName","name","getMovieById","id","getMovieCast","getMovieReviews","UlStyled","styled","ul","MovieCast","useState","castList","setCastList","useParams","useEffect","cast","console","log","movieCast","map","character","profile_path","src","defaultImg","alt","width"],"sourceRoot":""}