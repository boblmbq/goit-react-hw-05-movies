{"version":3,"file":"static/js/97.06634d72.chunk.js","mappings":"kTAEMA,EAAM,mCAENC,EAAWC,EAAAA,EAAMC,OAAO,CAC5BC,QAAQ,kCAGGC,EAAgB,mCAAG,sGAGpBJ,EAASK,IAAT,iCACkBN,EADlB,2FAHoB,uBAEpBO,EAFoB,EAE5BC,KAAQD,QAFoB,kBAOvBA,GAPuB,2CAAH,qDAUhBE,EAAe,mCAAG,WAAMC,GAAN,yFAGnBT,EAASK,IAAT,+BAAqCN,EAArC,kBAAkDU,IAH/B,uBAEnBH,EAFmB,EAE3BC,KAAQD,QAFmB,kBAItBA,GAJsB,2CAAH,sDAOfI,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASK,IAAT,gBAAsBM,EAAtB,oBAAoCZ,IADjC,uBAClBQ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAY,mCAAG,WAAMD,GAAN,yFACHX,EAASK,IAAT,gBAAsBM,EAAtB,4BAA4CZ,IADzC,uBAClBQ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZM,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAASK,IAAT,gBAAsBM,EAAtB,4BAA4CZ,IADtC,uBACrBQ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,mJCnCpBO,EAAWC,EAAQ,MAAnBD,O,SCEKE,E,QAAWC,EAAOC,GAAV,2G,SCIRC,EAAc,WACzB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQX,GAAOY,EAAAA,EAAAA,MAAPZ,GAWR,OATAa,EAAAA,EAAAA,YAAU,WAAM,wCACd,uGACuBX,EAAAA,EAAAA,IAAgBF,GADvC,OACQc,EADR,OAEUnB,EAAYmB,EAAZnB,QACRgB,EAAWhB,GAHb,4CADc,uBAAC,WAAD,wBAMdoB,EACD,GAAE,CAACf,KAGF,wBACGU,EAAQM,KAAI,gBFnBcC,EEmBXC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,WAApB,OACX,UAACf,EAAD,YACE,wBAAKa,KACL,uBAAIC,KACJ,iBAAME,SAAUD,EAAhB,UFvBuBH,EEuBwBG,EFvBhBjB,EAAO,IAAImB,KAAKL,GAAO,sBEoBzCC,EADJ,KASlB,C","sources":["api/api.js","utils/date_format.js","components/MovieReview/MovieReviev.styled.jsx","components/MovieReview/MovieReview.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '05daa517baabbb59954a8442a1286030';\n\nconst BASE_URL = axios.create({\n  baseURL: `https://api.themoviedb.org/3/`,\n});\n\nexport const getPopularMovies = async () => {\n  const {\n    data: { results },\n  } = await BASE_URL.get(\n    `discover/movie?api_key=${KEY}&include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc`\n  );\n\n  return results;\n};\n\nexport const getMoviesByName = async name => {\n  const {\n    data: { results },\n  } = await BASE_URL.get(`search/movie?api_key=${KEY}&query=${name}`);\n  return results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await BASE_URL.get(`movie/${id}?api_key=${KEY}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await BASE_URL.get(`movie/${id}/credits?api_key=${KEY}`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await BASE_URL.get(`movie/${id}/reviews?api_key=${KEY}`);\n  return data;\n};\n\n","const { format } = require('date-fns');\n\nexport const postDateFormating = date => format(new Date(date), 'MMM dd p yyyy');\n","import styled from \"@emotion/styled\";\n\nexport const CustomLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 20px;\n`;","import { getMovieReviews } from 'api/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { postDateFormating } from 'utils/date_format';\nimport { CustomLi } from './MovieReviev.styled';\n\nexport const MovieReview = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getReviews() {\n      const review = await getMovieReviews(id);\n      const { results } = review;\n      setReviews(results);\n    }\n    getReviews();\n  }, [id]);\n\n  return (\n    <ul>\n      {reviews.map(({ author, content, created_at }) => (\n        <CustomLi key={author}>\n          <h2>{author}</h2>\n          <p>{content}</p>\n          <time dateTime={created_at}>{postDateFormating(created_at)}</time>\n        </CustomLi>\n      ))}\n    </ul>\n  );\n};\n\n"],"names":["KEY","BASE_URL","axios","create","baseURL","getPopularMovies","get","results","data","getMoviesByName","name","getMovieById","id","getMovieCast","getMovieReviews","format","require","CustomLi","styled","li","MovieReview","useState","reviews","setReviews","useParams","useEffect","review","getReviews","map","date","author","content","created_at","dateTime","Date"],"sourceRoot":""}