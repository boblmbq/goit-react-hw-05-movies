{"version":3,"file":"static/js/415.776253b2.chunk.js","mappings":"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","sources":["api/api.js","components/MoviesList/MovieList.styled.jsx","utils/max_symbols.js","components/MoviesList/MoviesList.jsx","constants/default_img.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '05daa517baabbb59954a8442a1286030';\n\nconst BASE_URL = axios.create({\n  baseURL: `https://api.themoviedb.org/3/`,\n});\n\nexport const getPopularMovies = async () => {\n  const {\n    data: { results },\n  } = await BASE_URL.get(\n    `discover/movie?api_key=${KEY}&include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc`\n  );\n\n  return results;\n};\n\nexport const getMoviesByName = async name => {\n  const {\n    data: { results },\n  } = await BASE_URL.get(`search/movie?api_key=${KEY}&query=${name}`);\n  return results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await BASE_URL.get(`movie/${id}?api_key=${KEY}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await BASE_URL.get(`movie/${id}/credits?api_key=${KEY}`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await BASE_URL.get(`movie/${id}/reviews?api_key=${KEY}`);\n  return data;\n};\n\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 0 20px;\n  gap: ${({ theme }) => theme.countSize(2)};\n`;\n\nexport const MovieCard = styled.li`\n  overflow: hidden;\n  border-radius: ${({ theme }) => theme.countSize(2)};\n  background-color: #707070;\n  width: 530px;\n  max-height: 375px;\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n`;\n\nexport const Img = styled.img`\n  width: 250px;\n`;\n\nexport const MovieDesriptionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 0 5px;\n`;\n\nexport const MovieTitle = styled.p`\n  margin-bottom: ${({ theme }) => theme.countSize(5)};\n  font-size: ${({ theme }) => theme.countSize(8)};\n  color: ${({ theme }) => theme.colors.fontColor};\n`;\n\nexport const MovieOverviewWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  gap: ${({ theme }) => theme.countSize(3)};\n`;\n\nexport const MovieRating = styled.p`\n  margin-bottom: ${({ theme }) => theme.countSize(5)};\n  font-size: ${({ theme }) => theme.countSize(7)};\n`;\n\nexport const MovieOverviewTitle = styled.p`\n  font-size: ${({ theme }) => theme.countSize(5)};\n`;\n\nexport const MovieOverview = styled.p`\n  height: 130px;\n`;\n","export function maxSymbols(text) {\n  const maxWordsAmount = 30;\n  const textWordsAmount = text.split(' ');\n\n  if (textWordsAmount.length > maxWordsAmount) {\n    const slicedText = textWordsAmount.slice(0, maxWordsAmount);\n    return `${slicedText.join(' ')}...`;\n  }\n  return text;\n}\n","import { useLocation } from 'react-router-dom';\nimport defaultImg from 'constants/default_img';\nimport {\n  Img,\n  MovieCard,\n  MovieDesriptionWrapper,\n  MovieLink,\n  MovieOverview,\n  MovieOverviewTitle,\n  MovieOverviewWrapper,\n  MovieRating,\n  MovieTitle,\n  Ul,\n} from './MovieList.styled';\nimport { maxSymbols } from 'utils/max_symbols';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  if (movies) {\n    return (\n      <Ul>\n        {movies.map(\n          ({\n            original_title: title,\n            id,\n            poster_path: image,\n            vote_average,\n            overview,\n          }) => (\n            <MovieCard key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <Img\n                  src={\n                    image\n                      ? `https://image.tmdb.org/t/p/w500/${image}`\n                      : defaultImg\n                  }\n                  alt={title}\n                />\n                <MovieDesriptionWrapper>\n                    <MovieTitle>{title}</MovieTitle>\n                    <MovieRating>{vote_average}</MovieRating>\n                  <MovieOverviewWrapper>\n                    <MovieOverviewTitle>Description:</MovieOverviewTitle>\n                    <MovieOverview>{maxSymbols(overview)}</MovieOverview>\n                  </MovieOverviewWrapper>\n                </MovieDesriptionWrapper>\n              </MovieLink>\n            </MovieCard>\n          )\n        )}\n      </Ul>\n    );\n  }\n};\n\nexport default MovieList;\n\n// adult: false;\n// backdrop_path: '/1syW9SNna38rSl9fnXwc9fP7POW.jpg';\n// genre_ids: (3)[(28, 878, 12)];\n// id: 565770;\n// original_language: 'en';\n// original_title: 'Blue Beetle';\n// overview: 'Recent college grad Jaime Reyes returns home full of aspirations for his future, only to find that home is not quite as he left it. As he searches to find his purpose in the world, fate intervenes when Jaime unexpectedly finds himself in possession of an ancient relic of alien biotechnology: the Scarab.';\n// popularity: 2868.214;\n// poster_path: '/mXLOHHc1Zeuwsl4xYKjKh2280oL.jpg';\n// release_date: '2023-08-16';\n// title: 'Blue Beetle';\n// video: false;\n// vote_average: 7.1;\n// vote_count: 989;\n"," const defaultImg =\n  'https://imgs.search.brave.com/IoYXsAeMX1UnHVPpwqcjWOwaSOwAPx9uT-Srs96mG8g/rs:fit:500:0:0/g:ce/aHR0cHM6Ly9pMS5z/bmRjZG4uY29tL2Fy/dHdvcmtzLW51enI0/Q2R5WVY0VGY4TGQt/R2U0WFV3LXQ1MDB4/NTAwLmpwZw';\n\n\nexport default defaultImg;","import { getPopularMovies } from 'api/api';\nimport MovieList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState([]);\n\n  useEffect(() => {\n    try {\n      async function getMovies() {\n        const array = await getPopularMovies();\n        setPopularMovies(array);\n      }\n      getMovies();\n    } catch (error) {\n      console.log(error);\n    }\n\n    return () => {\n      setPopularMovies([]);\n    };\n  }, []);\n\n  return <MovieList movies={popularMovies} />;\n};\nexport default Home;\n"],"names":["KEY","BASE_URL","axios","create","baseURL","getPopularMovies","get","results","data","getMoviesByName","name","getMovieById","id","getMovieCast","getMovieReviews","Ul","styled","ul","theme","countSize","MovieCard","li","MovieLink","Link","Img","img","MovieDesriptionWrapper","div","MovieTitle","p","colors","fontColor","MovieOverviewWrapper","MovieRating","MovieOverviewTitle","MovieOverview","maxSymbols","text","textWordsAmount","split","length","slicedText","slice","join","movies","location","useLocation","map","title","original_title","image","poster_path","vote_average","overview","to","state","from","src","defaultImg","alt","useState","popularMovies","setPopularMovies","useEffect","getMovies","array","error","console","log"],"sourceRoot":""}