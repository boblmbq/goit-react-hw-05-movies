{"version":3,"file":"static/js/642.5092cbfb.chunk.js","mappings":"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","sources":["api/api.js","components/MoviesList/MovieList.styled.jsx","utils/max_symbols.js","components/MoviesList/MoviesList.jsx","constants/default_img.js","components/MovieSearch/MovieSearch.styled.jsx","components/MovieSearch/MovieSearch.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '05daa517baabbb59954a8442a1286030';\n\nconst BASE_URL = axios.create({\n  baseURL: `https://api.themoviedb.org/3/`,\n});\n\nexport const getPopularMovies = async () => {\n  const {\n    data: { results },\n  } = await BASE_URL.get(\n    `discover/movie?api_key=${KEY}&include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc`\n  );\n\n  return results;\n};\n\nexport const getMoviesByName = async name => {\n  const {\n    data: { results },\n  } = await BASE_URL.get(`search/movie?api_key=${KEY}&query=${name}`);\n  return results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await BASE_URL.get(`movie/${id}?api_key=${KEY}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await BASE_URL.get(`movie/${id}/credits?api_key=${KEY}`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await BASE_URL.get(`movie/${id}/reviews?api_key=${KEY}`);\n  return data;\n};\n\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  padding: 0 20px;\n  gap: ${({ theme }) => theme.countSize(2)};\n`;\n\nexport const MovieCard = styled.li`\n  overflow: hidden;\n  border-radius: ${({ theme }) => theme.countSize(2)};\n  background-color: #707070;\n  width: 530px;\n  max-height: 375px;\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n`;\n\nexport const Img = styled.img`\n  width: 250px;\n`;\n\nexport const MovieDesriptionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 0 5px;\n`;\n\nexport const MovieTitle = styled.p`\n  margin-bottom: ${({ theme }) => theme.countSize(5)};\n  font-size: ${({ theme }) => theme.countSize(8)};\n  color: ${({ theme }) => theme.colors.fontColor};\n`;\n\nexport const MovieOverviewWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  gap: ${({ theme }) => theme.countSize(3)};\n`;\n\nexport const MovieRating = styled.p`\n  margin-bottom: ${({ theme }) => theme.countSize(5)};\n  font-size: ${({ theme }) => theme.countSize(7)};\n`;\n\nexport const MovieOverviewTitle = styled.p`\n  font-size: ${({ theme }) => theme.countSize(5)};\n`;\n\nexport const MovieOverview = styled.p`\n  height: 130px;\n`;\n","export function maxSymbols(text) {\n  const maxWordsAmount = 30;\n  const textWordsAmount = text.split(' ');\n\n  if (textWordsAmount.length > maxWordsAmount) {\n    const slicedText = textWordsAmount.slice(0, maxWordsAmount);\n    return `${slicedText.join(' ')}...`;\n  }\n  return text;\n}\n","import { useLocation } from 'react-router-dom';\nimport defaultImg from 'constants/default_img';\nimport {\n  Img,\n  MovieCard,\n  MovieDesriptionWrapper,\n  MovieLink,\n  MovieOverview,\n  MovieOverviewTitle,\n  MovieOverviewWrapper,\n  MovieRating,\n  MovieTitle,\n  Ul,\n} from './MovieList.styled';\nimport { maxSymbols } from 'utils/max_symbols';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  if (movies) {\n    return (\n      <Ul>\n        {movies.map(\n          ({\n            original_title: title,\n            id,\n            poster_path: image,\n            vote_average,\n            overview,\n          }) => (\n            <MovieCard key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <Img\n                  src={\n                    image\n                      ? `https://image.tmdb.org/t/p/w500/${image}`\n                      : defaultImg\n                  }\n                  alt={title}\n                />\n                <MovieDesriptionWrapper>\n                    <MovieTitle>{title}</MovieTitle>\n                    <MovieRating>{vote_average}</MovieRating>\n                  <MovieOverviewWrapper>\n                    <MovieOverviewTitle>Description:</MovieOverviewTitle>\n                    <MovieOverview>{maxSymbols(overview)}</MovieOverview>\n                  </MovieOverviewWrapper>\n                </MovieDesriptionWrapper>\n              </MovieLink>\n            </MovieCard>\n          )\n        )}\n      </Ul>\n    );\n  }\n};\n\nexport default MovieList;\n"," const defaultImg =\n  'https://imgs.search.brave.com/IoYXsAeMX1UnHVPpwqcjWOwaSOwAPx9uT-Srs96mG8g/rs:fit:500:0:0/g:ce/aHR0cHM6Ly9pMS5z/bmRjZG4uY29tL2Fy/dHdvcmtzLW51enI0/Q2R5WVY0VGY4TGQt/R2U0WFV3LXQ1MDB4/NTAwLmpwZw';\n\n\nexport default defaultImg;","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  flex-direction: column;\n  margin-bottom: ${({ theme }) => theme.countSize(7)};\n`;\n\nexport const InputStyled = styled.input`\n  color: ${({ theme }) => theme.colors.fontColor};\n  text-align: center;\n  font-size: ${({ theme }) => theme.countSize(8)};\n  width: 100%;\n  height: ${({ theme }) => theme.countSize(11)};\n  outline: none;\n  border: none;\n  border-radius: ${({ theme }) => theme.countSize(2)};\n  background-color: ${({ theme }) => theme.colors.inputSearch};\n\n  margin-bottom: ${({ theme }) => theme.countSize(3)};\n\n  &::placeholder {\n    font-size: ${({ theme }) => theme.countSize(5)};\n    text-transform: uppercase;\n  }\n`;\n\nexport const ButtonStyled = styled.button`\n  width: max-content;\n  font-size: ${({ theme }) => theme.countSize(4)};\n  color: ${({ theme }) => theme.colors.fontColor};\n  background: none;\n  border: none;\n  text-transform: uppercase;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    text-decoration: underline;\n  }\n`;\n","import { useState } from 'react';\nimport { ButtonStyled, FormStyled, InputStyled } from './MovieSearch.styled';\n\nconst MovieSearch = ({ submitHandle }) => {\n  const [value, setValue] = useState('');\n\n  function changeValue(e) {\n    const newValue = e.target.value;\n\n    if (newValue.toLowerCase() === value.toLowerCase()) return;\n\n    setValue(newValue);\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const submittedValue = e.currentTarget.search.value;\n    if (submittedValue.trim() === '') {\n      alert('please write something');\n      return;\n    }\n    submitHandle(submittedValue);\n    setValue('');\n  }\n\n  return (\n    <FormStyled onSubmit={onSubmit}>\n      <InputStyled\n        placeholder=\"write your query\"\n        autoComplete=\"off\"\n        type=\"text\"\n        name=\"search\"\n        value={value}\n        onChange={changeValue}\n      />\n\n      <ButtonStyled type=\"submit\">press enter or here to search</ButtonStyled>\n    </FormStyled>\n  );\n};\n\nexport default MovieSearch;\n","import MovieList from 'components/MoviesList/MoviesList';\nimport MovieSearch from 'components/MovieSearch';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMoviesByName } from 'api/api';\n\nconst Movies = () => {\n  const [urlParams, setUrlParams] = useSearchParams();\n  const [findedMovies, setFindedMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const movieName = urlParams.get('search');\n\n  function handlerSubmit(movieName) {\n    setUrlParams({ search: movieName.trim() });\n  }\n\n  useEffect(() => {\n    if (!movieName) return;\n    setLoading(true);\n    async function findMovies() {\n      try {\n        const moviesArray = await getMoviesByName(movieName);\n        setFindedMovies(moviesArray);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    findMovies();\n  }, [movieName]);\n\n  return (\n    <>\n      <MovieSearch submitHandle={handlerSubmit} />\n      {loading && <h1>loading...</h1>}\n      {movieName && findedMovies.length > 1 && (\n        <MovieList movies={findedMovies} />\n      )}\n      {movieName && !findedMovies.length && <h1>Sorry we found nothing</h1>}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","BASE_URL","axios","create","baseURL","getPopularMovies","get","results","data","getMoviesByName","name","getMovieById","id","getMovieCast","getMovieReviews","Ul","styled","ul","theme","countSize","MovieCard","li","MovieLink","Link","Img","img","MovieDesriptionWrapper","div","MovieTitle","p","colors","fontColor","MovieOverviewWrapper","MovieRating","MovieOverviewTitle","MovieOverview","maxSymbols","text","textWordsAmount","split","length","slicedText","slice","join","movies","location","useLocation","map","title","original_title","image","poster_path","vote_average","overview","to","state","from","src","defaultImg","alt","FormStyled","form","InputStyled","input","inputSearch","ButtonStyled","button","submitHandle","useState","value","setValue","onSubmit","e","preventDefault","submittedValue","currentTarget","search","trim","alert","placeholder","autoComplete","type","onChange","newValue","target","toLowerCase","useSearchParams","urlParams","setUrlParams","findedMovies","setFindedMovies","loading","setLoading","movieName","useEffect","moviesArray","console","log","findMovies"],"sourceRoot":""}